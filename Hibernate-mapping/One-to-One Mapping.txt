In one to one unidirectionl mapping there are two table one is parent table and other is child table.
So in Hibernate also there will be one Parent entity and child entity.
So we have to give reference of Parent table and its column and also foreign key name in child entity;

##########parent table #############
@Table(name="Users")
public class Users {

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name="User_ID")
	private int ID;
	
	@Column(name="User_first_name")
	@NotEmpty(message="Field cannot be left blank")
	private String First_Name;
	
	@Column(name="user_last_name")
	private String Last_Name;
	
	@Column(name="user_contact")
	@NotNull(message="Contact cannot be empty")
	@Phone(message="Invalid contact")
	@UniqueKey(columnName="Contact",className=Users.class,message="contact already registered")
	private Long Contact;
	
	@Column(name="user_email",unique=true)
	@NotEmpty(message="Email field cannot be left blank")
	@org.hibernate.validator.constraints.Email(regexp="^([a-zA-Z.]){4,30}\\w+@[-+.0-9A-Z_a-z]+\\.[A-Za-z]{2,4}$", message="invalid email")
	@Length(min=8,max=50)
	@UniqueKey(columnName="Email",className=Users.class,message="Email already registered")
	private String Email;
	
	@Column(name="user_date_birth")
	private Date DateOfBirth;

	@Column(name="user_joining_date")
	private Date DateOfJoining;
	
	@Column(name="user_salary")
	private Integer Salary;
		
}
#############################################################

#####################Child Table####################
@Entity
@Table(name="LoginCredential")
public class Login {
	
	@Id	
	@Column(name="ID")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private int ID;
	
	@Column(name="User_Password")
	private String Password;
	
	@OneToOne(cascade=CascadeType.ALL)
	@JoinColumn(name="user_email",foreignKey=@ForeignKey(name="FK_User_Login_Table"),referencedColumnName="user_email") // #1
	private Users users;
	
	public Login(){}
	public Login(String Password){
		this.Password = Password;
	}
}

##########################Dao###########################
@Repository
public class TaskDaoImpl implements TaskDao {

	@Autowired
	private SessionFactory factory;
	
	private Transaction tx;
	
	@Override
	@Transactional
	public void Register(Users users){
		Session session = factory.openSession();
		tx = session.beginTransaction();

		Login login = new Login(users.getFirst_Name()+"0532");
		login.setUsers(users);

		session.save(login);
		tx.commit();
		session.close();
	}

}